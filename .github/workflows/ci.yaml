name: Run tests and upload coverage

on:
  pull_request:
    branches: [ master ]

jobs:
  lint:
    name: Run Ruff linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run Ruff
        uses: chartboost/ruff-action@v1
        with:
          version: "0.9.3"
          args: |
            check
            format --check

  test:
    name: Run tests and collect coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Set up poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: latest

      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: Install the project dependencies
        run: poetry install

      - name: Download ml-1m dataset and run tests
        run: |
          poetry run python scripts/download/movielens.py --package "ml-1m"
          ls recommender/.data/movielens
          poetry run pytest --cov --cov-report=xml

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}